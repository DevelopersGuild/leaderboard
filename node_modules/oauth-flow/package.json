{
  "name": "oauth-flow",
  "version": "0.2.1",
  "description": "Middleware for express or connect that implements the authorization flow of oAuth and passes the resulting tokens via req.oauth",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:doxout/node-oauth-flow.git"
  },
  "keywords": [
    "oauth",
    "flow"
  ],
  "author": {
    "name": "radedespo"
  },
  "license": "MIT",
  "devDependencies": {
    "zombie": "~1.4.1",
    "express": "~3.1.1",
    "chai": "~1.5.0"
  },
  "dependencies": {
    "oauth": "~0.9.10"
  },
  "readme": "# node-oauth-flow\n\nMiddleware for express or connect that implements \nthe authorization flow of oAuth. What you do with\nthe authorization data is up to you.\n\n# example\n\nHere is a working dropbox example\n\n```js\nvar oauthFlow = require('oauth-flow');\n\napp.use('/auth/dropbox', oauthFlow({\n    provider: {\n        requestTokenUrl: \"https://api.dropbox.com/1/oauth/request_token\",\n        authorizationUrl: \"https://www.dropbox.com/1/oauth/authorize\",\n        accessTokenUrl: \"https://api.dropbox.com/1/oauth/access_token\",\n        version: \"1.0\",\n        type: \"PLAINTEXT\"\n    },\n    user: {\n        appKey: \"APPKEY\",\n        appSecret: \"APPSECRET\"\n    }\n}, function (req, res) {\n    // req.oauth contains oauth_token, oauth_token_secret, oauth_access_token,\n    // and oauth_access_token_secret\n    res.end('done');\n}));\n```\n\nAlternatively you can omit the callback and in express do something like:\n\n\n```js\napp.get('/auth/dropbox', oauthFlow({...}), function(req, res) {\n    // req.oauth contains oauth_token, oauth_token_secret, oauth_access_token,\n    // and oauth_access_token_secret\n    res.end('done');\n});\n```\n\nThis middleware doesn't assume that you wish to use it for user authentication.\nInstead, it only implements the oAuth authorization flow by creating a single\nendpoint, for example, at:\n\n* `/auth/dropbox`\n\nPoint the user to /auth/dropbox when you want them to authorize to\nthe app. You can add your own custom parameters to the url.\n\nAfter the user authorizes your app, he will be redirected back to `/auth/dropbox`\nThere, oauth-flow will put the authorization parameters in req.oauth then\ncall your custom middleware. Custom parameters that were passed when you sent the\nuser to `/auth/dropbox/` will also be passed when returning.\n\nWhat you do afterwards with the authorization data is entirely up to you.\nYou may create a new user, authenticate a user, add their account or do\nsomething entirely different. You can redirect them to the original URL, or\nalternaively if you opened the authorization dialog in a new window, simply\nsend a script to close the window - oauth-flow doesn't limit you to any particular\nuse.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/doxout/node-oauth-flow/issues"
  },
  "homepage": "https://github.com/doxout/node-oauth-flow",
  "_id": "oauth-flow@0.2.1",
  "_shasum": "c94012e3ef05a832f5b7876a4c708ec316ed3a75",
  "_from": "oauth-flow@",
  "_resolved": "https://registry.npmjs.org/oauth-flow/-/oauth-flow-0.2.1.tgz"
}
